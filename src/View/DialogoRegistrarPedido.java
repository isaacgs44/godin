/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.Almacen;
import Controller.Pedido;
import Controller.Producto;
import Controller.Proveedor;
import Controller.Secretaria;
import Controller.TablaRegPedido;
import Controller.Utilidades;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author lenovo
 */
public class DialogoRegistrarPedido extends javax.swing.JDialog {

    private Pedido pedido;
    private List<Producto> productos;
    private Proveedor prov;
    private DecimalFormat df = new DecimalFormat("#.##");
    private Boolean datosValidos = false;

    public Pedido getPedido() {
        return pedido;
    }

    public void setTxtCodigoB(String cad) {
        this.txtCodigoB.setText(cad);
    }

    public JTextField getTxtCodigoB() {
        return txtCodigoB;
    }

    /**
     * Creates new form DialogoRegistrarPedido
     */
    public DialogoRegistrarPedido(java.awt.Frame parent, boolean modal, Proveedor prov) {
        super(parent, modal);
        initComponents();
        this.pedido = new Pedido();
        this.productos = new ArrayList<>();
        this.prov = prov;
        Calendar c1 = new GregorianCalendar();
        Integer dia = c1.get(Calendar.DATE);
        Integer mes = c1.get(Calendar.MONTH) + 1; //se suma 1 por que el 0 es enero
        Integer anio = c1.get(Calendar.YEAR);
        String fecha = anio.toString() + "-" + mes.toString() + "-" + dia.toString();
        this.pedido.setFecha(fecha);
        txtCodigoB.setEditable(true);
    }

    public List<Producto> getProductos() {
        return productos;
    }

    public void setProductos(List<Producto> productos) {
        this.productos = productos;
    }

    public void addProducto(Producto p) {
        this.productos.add(p);
    }

    public Proveedor getProv() {
        return prov;
    }

    public void actualizarTabla() {
        TablaRegPedido modelo1 = new TablaRegPedido(this.productos.size());  //numero de filas del ResultSet como parametro del constructor
        int i = 0;
        Double precioNeto = 0.0;
        for (Producto p1 : this.productos) {
            modelo1.setValueAt(p1.getCodigoBarras(), i, 0);
            modelo1.setValueAt(p1.getNombre(), i, 1);
            modelo1.setValueAt(p1.getCantidad(), i, 2);
            modelo1.setValueAt(p1.getPrecioC(), i, 3);
            modelo1.setValueAt(p1.getPrecioV(), i, 4);
            precioNeto += (p1.getPrecioC() * p1.getCantidad());
            i++;

        }
        tablaPedido.setModel(modelo1);
        tablaPedido.getColumn(tablaPedido.getColumnName(0)).setHeaderValue(" ");
        tablaPedido.getColumn(tablaPedido.getColumnName(1)).setHeaderValue("Nombre");
        tablaPedido.getColumn(tablaPedido.getColumnName(2)).setHeaderValue("Cantidad");
        tablaPedido.getColumn(tablaPedido.getColumnName(3)).setHeaderValue("Precio C");
        tablaPedido.getColumn(tablaPedido.getColumnName(4)).setHeaderValue("Preico V");

        tablaPedido.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaPedido.getColumnModel().getColumn(0).setMinWidth(0);
        tablaPedido.getColumnModel().getColumn(0).setPreferredWidth(0);

        txtprecioNeto.setText(df.format(precioNeto));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegistrar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        txtCodigoB = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtprecioNeto = new javax.swing.JLabel();
        btnBorrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtEnvio = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPedido = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        txtCodigoB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoBKeyReleased(evt);
            }
        });

        jLabel3.setText("Código:");

        txtprecioNeto.setText("0.0");

        btnBorrar.setText("Borrar");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        jLabel1.setText("Neto: $");

        jLabel2.setText("Envío");

        txtEnvio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnvioActionPerformed(evt);
            }
        });
        txtEnvio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEnvioKeyReleased(evt);
            }
        });

        tablaPedido.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Cantidad", "Precio C", "Precio V"
            }
        ));
        jScrollPane1.setViewportView(tablaPedido);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel3)
                        .addGap(32, 32, 32)
                        .addComponent(txtCodigoB, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 265, Short.MAX_VALUE)
                        .addComponent(btnBorrar))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtprecioNeto, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 539, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(39, 39, 39)
                        .addComponent(txtEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(415, 415, 415))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregar)
                            .addComponent(txtCodigoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBorrar)
                        .addGap(16, 16, 16)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEnvio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtprecioNeto)))
                .addGap(3, 3, 3)
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        if (datosValidos) {
            if (txtEnvio.getText().length() != 0) {
                pedido.setEnvio(Double.parseDouble(txtEnvio.getText()));
                pedido.setNeto(Double.parseDouble(df.format(Double.parseDouble(txtprecioNeto.getText()))));
                pedido.setIdProv(this.prov.getId());
                pedido.setProductos(this.productos);
                Almacen a1 = new Almacen();
                if (a1.regPedido(pedido) && a1.agregarProd(pedido.getProductos())) {
                    Secretaria mary = new Secretaria();
                    mary.registrarOperacion(this.prov.getCtaAlm(), "AC000-000", pedido.getNeto(), "pedido: " + pedido.getId()); // "AC000-000" - abono a caja chica
                    mary.registrarOperacion("GA002-000", "AC000-000", pedido.getEnvio(), "envio: pedido: " + pedido.getId()); //costo de envio - GA002-000-envios "AC000-000"-caja chica
                    JOptionPane.showOptionDialog(this, "Pedido registrado", "Notificación", JOptionPane.INFORMATION_MESSAGE, JOptionPane.INFORMATION_MESSAGE, null, new Object[]{" OK "}, "OK");
                    dispose();
                } else {
                    JOptionPane.showOptionDialog(this, "Verifique sus datos", "ERROR", JOptionPane.ERROR_MESSAGE, JOptionPane.ERROR_MESSAGE, null, new Object[]{" OK "}, "OK");
                }
            } else {
                JOptionPane.showOptionDialog(this, "Campos vacíos", "Aviso", JOptionPane.ERROR_MESSAGE, JOptionPane.ERROR_MESSAGE, null, new Object[]{" OK "}, "OK");
            }
        } else {
            JOptionPane.showOptionDialog(this, "Datos no válidos", "Aviso", JOptionPane.ERROR_MESSAGE, JOptionPane.ERROR_MESSAGE, null, new Object[]{" OK "}, "OK");
        }

    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        String codigoB = txtCodigoB.getText();

        Almacen a = new Almacen();
        Producto p = a.buscarDatos(codigoB);
        if (p != null) {
            DialogoPedidoCantidad d = new DialogoPedidoCantidad(null, true, p, this);
            d.pack();
            d.setVisible(true);
            d.setResizable(true);
            d.setLocationRelativeTo(null);
        } else {
            DialogoAgregarProd d = new DialogoAgregarProd(null, true, this, codigoB);
            d.pack();
            d.setVisible(true);
            d.setResizable(true);
            d.setLocationRelativeTo(null);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtCodigoBKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAgregar.doClick();
        }
    }//GEN-LAST:event_txtCodigoBKeyReleased

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if (tablaPedido.getSelectedRow() != -1) {
            Integer fila = tablaPedido.getSelectedRow();
            this.productos.remove(this.productos.get(fila));
            actualizarTabla();
        } else {
            JOptionPane.showOptionDialog(this, "Seleccione un elemento", "Notificación", JOptionPane.ERROR_MESSAGE, JOptionPane.ERROR_MESSAGE, null, new Object[]{" OK "}, "OK");
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void txtEnvioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnvioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnvioActionPerformed

    private void txtEnvioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEnvioKeyReleased
        if (Pattern.matches("^([0-9]{1,4})(([.])([0-9]{2}))*$", txtEnvio.getText())) {
            txtEnvio.setBackground(Color.GREEN);
            txtEnvio.setForeground(Color.BLACK);
            this.datosValidos = true;
        } else {
            txtEnvio.setForeground(Color.WHITE);
            txtEnvio.setBackground(Color.RED);
            this.datosValidos = false;
        }
    }//GEN-LAST:event_txtEnvioKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaPedido;
    private javax.swing.JTextField txtCodigoB;
    private javax.swing.JTextField txtEnvio;
    private javax.swing.JLabel txtprecioNeto;
    // End of variables declaration//GEN-END:variables
}
